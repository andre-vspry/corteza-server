package: automation
imports:
  - github.com/cortezaproject/corteza-server/compose/types

types:
  ComposeNamespace:
    as: '*types.Namespace'
    struct:
      - { name: 'ID',              exprType: 'ID',           goType: 'uint64',                 mode: ro, alias: 'namespaceID' }
      - { name: 'name',            exprType: 'String',       goType: 'string' }
      - { name: 'slug',            exprType: 'Handle',       goType: 'string',                           alias: 'handle'}
      - { name: 'labels',          exprType: 'KV',           goType: 'map[string]string' }
      - { name: 'createdAt',       exprType: 'DateTime',     goType: 'time.Time',              mode: ro }
      - { name: 'updatedAt',       exprType: 'DateTime',     goType: '*time.Time',             mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',     goType: '*time.Time',             mode: ro }
  ComposeModule:
    as: '*types.Module'
    struct:
      - { name: 'ID',              exprType: 'ID',           goType: 'uint64',                 mode: ro, alias: 'moduleID' }
      - { name: 'namespaceID',     exprType: 'ID',           goType: 'uint64',                 mode: ro }
      - { name: 'name',            exprType: 'String',       goType: 'string' }
      - { name: 'handle',          exprType: 'Handle',       goType: 'string' }
      - { name: 'labels',          exprType: 'KV',           goType: 'map[string]string' }
      - { name: 'createdAt',       exprType: 'DateTime',     goType: 'time.Time',              mode: ro }
      - { name: 'updatedAt',       exprType: 'DateTime',     goType: '*time.Time',             mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',     goType: '*time.Time',             mode: ro }

  ComposeRecord:
    as: '*types.Record'
    struct:
      - { name: 'ID',              exprType: 'ID',                  goType: 'uint64',                 mode: ro, alias: 'recordID' }
      - { name: 'moduleID',        exprType: 'ID',                  goType: 'uint64',                 mode: ro }
      - { name: 'namespaceID',     exprType: 'ID',                  goType: 'uint64',                 mode: ro }
      - { name: 'values',          exprType: 'ComposeRecordValues', goType: 'map[string]interface{}' }
      - { name: 'labels',          exprType: 'KV',                  goType: 'map[string]string' }
      - { name: 'ownedBy',         exprType: 'ID',                  goType: 'uint64' }
      - { name: 'createdAt',       exprType: 'DateTime',            goType: 'time.Time',              mode: ro }
      - { name: 'createdBy',       exprType: 'ID',                  goType: 'uint64',                 mode: ro }
      - { name: 'updatedAt',       exprType: 'DateTime',            goType: '*time.Time',             mode: ro }
      - { name: 'updatedBy',       exprType: 'ID',                  goType: 'uint64',                 mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',            goType: '*time.Time',             mode: ro }
      - { name: 'deletedBy',       exprType: 'ID',                  goType: 'uint64',                 mode: ro }
    customSelector:      true
    customGValSelector:  true
    customFieldAssigner: true

  ComposeRecordValues:
    customType: true
    as:         'types.RecordValueSet'

  ComposeRecordValueErrorSet:
    as:     '*types.RecordValueErrorSet'


  Attachment:
    as: '*types.Attachment'
    struct:
      - { name: 'ID',              exprType: 'ID',           goType: 'uint64', mode: ro}
      - { name: 'kind',            exprType: 'String',       goType: 'string' }
      - { name: 'url',             exprType: 'Handle',       goType: 'string' }
      - { name: 'previewUrl',      exprType: 'Handle',       goType: 'string' }
      - { name: 'name',            exprType: 'Handle',       goType: 'string' }
#      - { name: 'meta',            exprType: 'AttachmentMeta',       goType: 'string' }
      - { name: 'createdAt',       exprType: 'DateTime',     goType: 'time.Time',   mode: ro }
      - { name: 'updatedAt',       exprType: 'DateTime',     goType: '*time.Time',  mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',     goType: '*time.Time',  mode: ro }

#  AttachmentMeta:
#    as: '*types.Attachment'
#    struct:
#      - { name: 'size',            exprType: 'Integer',      goType: 'int64' }
#      - { name: 'extension',       exprType: 'String',       goType: 'string' }
#      - { name: 'mimetype',        exprType: 'String',       goType: 'string' }
#      - { name: 'previewUrl',      exprType: 'Handle',       goType: 'string' }
#      - { name: 'name',            exprType: 'Handle',       goType: 'string' }
#      - { name: 'image',  exprType: 'AttachmentMetaImage',       goType: 'string' }
#
#  AttachmentMetaImage:
#    as: '*types.AttachmentImageMeta'
#    struct:
#      - { name: 'weight',          exprType: 'Integer',      goType: 'int',  mode: ro }
#      - { name: 'height',          exprType: 'Integer',      goType: 'int',  mode: ro }
#      - { name: 'animated',        exprType: 'Boolean',      goType: 'bool', mode: ro }


#
#  Page:
#    as: '*types.Page'
#  Chart:
#    as: '*types.Chart'
